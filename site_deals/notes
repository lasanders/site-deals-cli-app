1. Plan my Gem - imagine interface:
  -create an interface to look for shopping deals on Gilt and Ruelala
  -user will type site-deals
  -different brands will be listed
  -ask user to select brand if they'd like to see more
2. Start with project structure
  -bundle gem site-deals - used Bundler to generate
  -create lib, bin, rake, README, gemspec
<<<<<<< HEAD
3. Start with entry point - run site-deals - create site_deals in bin folder.
4. Force that to build CLI interface
-defined execution point - the file where people will run program (./bin/site_deals).
-try to get it working in terminal ("hello world"). Yay! it worked.
5. Stub out Interface
  -create class SiteDeals::CLI
  -In bin/site_deals, link to lib/site_deals/cli and lib/site_deals/version.
  -This creates a new instance of controller cli. set the call method, which starts list_deals, menu, goodbye
6. Start making things real - we need brand name, url, price availability
  -stub it out
  -individual instances with properties. add attribute accessor and code for instances.
  -reconstruct menu and list_deals methods to set instance variable @deals and set @deals = the_deal.
  -reconstruct self.today method to make deal_1 and deal_2 real.
  -replace our fake data by scraping ruelala and Gilt, return deals based on that data.
  -create new class method scrape_deals - that goes to both Gilt and Ruelala to find the brands on sale, extract properties, and instantiate a deal
  -add dependencies to gem.spec file - add pry, Nokogiri, add 'require' nokogiri to site_deals.rb


Really tried to make it better, but can't figure out how to pair the brand, item, and price.
  class SiteDeals::CLI
    #Our CLI Controller

    def call
      list_deals
      menu
      goodbye
    end

    def list_deals
      dealer = []
      @deals= SiteDeals::Deal.today
      binding.pry
       @deals.each.with_index do |deal, i|
         deal.each.with_index do |dealie, i|
         # deal.name.each.with_index  do |a_deal, i|
         #   deal.title.each.with_index  do |b_deal, i|
         #      deal.price.each.with_index do |c_deal, i|

                puts = "#{i}. #{dealie.name} - #{dealie.title}  #{dealie.price}"
           # puts "#{i}. #{a_deal} - #{b_deal} - #{c_deal}"

      #   puts "#{the_deal}"
      # @deals.each.with_index(1) do |deal, i|
        # dealer.each.with_index(1) do |deal, i|

          # puts  "#{i}. #{deal}"


  end
  binding.pry
        end

    end



    def menu
      @deals = SiteDeals::Deal.today
      input = nil
      # @deals.each.with_index(1) do |deal, i|
      while input != "exit"
        puts "Please select brand to see products or type list to see brands again or type exit:"
        input = gets.strip.downcase

        if input.to_i == 1
          the_deal = @deals[input.to_i-1]

              puts "#{the_deal.name} #{the_deal.title}- #{the_deal.price}"
  #binding.pry
            # the_deal = @deals[input.to_i-1]
          # @deals.each.with_index(1) do |deal, i|
          # #   puts "#{i}. #{deal}.name - #{deal}.title- #{deal}.price"

          # puts "#{the_deal.name} - #{the_deal.title} - #{the_deal.price}"
          # puts "For this product and similar products: https://www.shopbop.com"
          #   the_deal = @deals_1[input.to_i-1]
          #   puts "#{the_deal}"
          # the_deal = @deals[input.to_i-1]
          # puts "#{the_deal.name} - #{the_deal.title} - #{the_deal.price}"

          # elsif input.to_i == 1
          # the_deal_1 = @deals[input.to_i-1]
          #  puts "the_deal.name - the_deal.title - the_deal.price"
          #   puts "For this product and similar products: https://www.shopbop.com"
        # elsif input.to_i == 2
        #   the_deal_2 = @deals[input.to_i-1]
        #   puts "For this product and similar products: https://www.gilt.com"
        # elsif input == "list"
        #   list_deals
        # else
        #   puts "I didn't understand. Please select brand, list, or exit."
          # binding.pry


  # end
  end
  end
  end


    def goodbye
      puts "See you tomorrow for more deals!!!"
    end
  end

  require 'pry'
  class SiteDeals::Deal
    attr_accessor :name, :price, :availability, :url, :title, :all_sales

    def self.today
      self.scrape_deals
  end

  def self.scrape_deals
     deals = []

    deals << self.scrape_shopbop
    deals << self.scrape_revolve
    # deals << self.get_brands


    end

    def self.scrape_shopbop

    deal = self.new
    doc = Nokogiri::HTML(open("https://www.shopbop.com/new-today/br/v=1/50579.htm"))
    deal.name = doc.search("div.brand").map {|brand| brand.text.strip}.compact
    #deals.name = doc.search("div.brand").text.strip
    deal.title = doc.search("div.title").map {|title| title.text.strip}.compact
    deal.price = doc.search("span.retail-price").map {|price| price.text.strip}.compact

    deal.url = doc.search("span.productBrowseMainImage img").attribute("src").value.strip
    #binding.pry
      # deals.each.with_index(1) do |deal, i|
      # deals = "#{i}. #{deal.name} - #{deal.title} - #{deal.price}"
       deal
      # binding.pry

  end

  def self.scrape_revolve
     deal = self.new
    doc = Nokogiri::HTML(open("http://www.revolve.com/new/20171110/br/165f75/?navsrc=main"))


     deal.name = doc.search("a div.plp-name.h1.plp-name").children.text.strip
     deal.title = doc.search("a div.plp-brand.js-plp-brand").children.text.strip
     deal.price = doc.search("a span.plp_price").children.text

     deal.url =   doc.search( "div.plp_image_wrap a img").attr("src").value.strip
     deal
      # binding.pry
  end
  end
  # def self.get_brands
  #   deals = self.new
  #
  #    doc_1 = Nokogiri::HTML(open("https://www.gilt.com/"))
  #
  #    deals.name = doc_.search("h1.sale-name").map {|sale| sale.text}.compact
  #
  #     #binding.pry
  #
  #     deals.name
  #
  # end

  #     deals.name = info.css("div.js-plp-brand").text
  #     deals.title = info.css("div.js-plp-name").text
  #     deals.price = info.css("a span.plp_price").text
  # #binding.pry
  #    deals.url =  info.css("a img.js-plp-image").attr("src").value
  #    deals
  #   # doc.search("a img.js-plp-image").attr("src").value
  # end
  #   def self.scrape_shopbop
  #   doc = Nokogiri::HTML(open("https://www.shopbop.com/new-today/br/v=1/50579.htm"))
  #   self.new
  #   deals.name = doc.search("div.brand").text.strip
  #   deals.title = doc.search("div.title").first.text.strip
  #   deals.price = doc.search("span.retail-price").first.text.strip
  #   deals.url = doc.search("div.info.clearfix a[href]").attr("href").value
  #   #binding.pry
  #   deals
  # end
  #
  # def self.scrape_revolve
  #    deal = Deals.new
  #   doc = Nokogiri::HTML(open("http://www.revolve.com/new/all-new-items/br/7f5946/?navsrc=subnew_i1"))
  #
  #   deal.name = doc.search("a div.plp-brand.js-plp-brand").first.children.text.strip
  #    deal.title = doc.search("a div.plp-name.h1.plp-name").first.children.text.strip
  #
  #    deal.price = doc.search("a span.plp_price").first.children.text
  # #binding.pry
  #    deal.url =  doc.search("div.u-text-decoration-none a[href]").attr("href").value
  #    deal
  #
  # end
  # end
