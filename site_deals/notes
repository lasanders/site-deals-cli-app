1. Plan my Gem - imagine interface:
  -create an interface to look for shopping deals on Gilt and Ruelala
  -user will type site-deals
  -different brands will be listed
  -ask user to select brand if they'd like to see more
2. Start with project structure
  -bundle gem site-deals - used Bundler to generate
  -create lib, bin, rake, README, gemspec
<<<<<<< HEAD
3. Start with entry point - run site-deals - create site_deals in bin folder.
4. Force that to build CLI interface
-defined execution point - the file where people will run program (./bin/site_deals).
-try to get it working in terminal ("hello world"). Yay! it worked.
5. Stub out Interface
  -create class SiteDeals::CLI
  -In bin/site_deals, link to lib/site_deals/cli and lib/site_deals/version.
  -This creates a new instance of controller cli. set the call method, which starts list_deals, menu, goodbye
6. Start making things real - we need brand name, url, price availability
  -stub it out
  -individual instances with properties. add attribute accessor and code for instances.
  -reconstruct menu and list_deals methods to set instance variable @deals and set @deals = the_deal.
  -reconstruct self.today method to make deal_1 and deal_2 real.
  -replace our fake data by scraping ruelala and Gilt, return deals based on that data.
  -create new class method scrape_deals - that goes to both Gilt and Ruelala to find the brands on sale, extract properties, and instantiate a deal
  -add dependencies to gem.spec file - add pry, Nokogiri, add 'require' nokogiri to site_deals.rb
